
storybook
https://youtu.be/nWgKVEEI47Q
npx -p @storybook/cli sb init




npx react-native init Counter

  Run instructions for iOS:
    • cd /Users/thewavelet/dev/smoothie/Counter && npx react-native run-ios
    - or -
    • Open Counter/ios/Counter.xcworkspace in Xcode or run "xed -b ios"
    • Hit the Run button

  Run instructions for Android:
    • Have an Android emulator running (quickest way to get started), or a device connected.
    • cd /Users/thewavelet/dev/smoothie/Counter && npx react-native run-android


yarn add styled-components
yarn add --dev typescript @types/react @types/react-native @types/styled-components babel-plugin-root-import

touch tsconfig.json

...


babel.config.js

module.exports = {
  presets: ['module:metro-react-native-babel-preset'],
  plugins: [
    [
      'babel-plugin-root-import',
      {
        rootPathPrefix: '~',
        rootPathSuffix: 'src',
      },
    ],
  ],
};





npx react-native init TodoList --template react-native-template-typescript

npx react-native init -version 0.59.10 FirstApp

npm config set save-exact=true : npm 통해 설치하는 라이브러리, 모듈들의 버전을 고정하기 위한 명령어.

yarn add styled-components
yarn add --dev typescript @types/react @types/styled-components babel-plugin-root-import


tsconfig.json 은 이부부만 수정. "jsx": "react-native", 이것도 "jsx": "react" 로 수정해야함. import React 부분 오류남.

"baseUrl": "./src",                       /* Base directory to resolve non-absolute module names. */
"paths": {"~/*": ["*"]},                  /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */


yarn add @react-native-community/async-storage : async storage 가 0.59 버전부터 분리되었다.
cd ios
pod install

0.60 버전 이후 부터는 자동 연결된다. 그 이전 버전은
react-native link @react-native-community/async-storage 해주면 된다.






npx react-native init WeatherApp --template react-native-template-typescript

yarn add react-native-geolocation-service

./ios/Podfile
pod 'react-native-geolocation', path: '../node_modules/@react-native-community/geolocation'
#cd ios
pod install

./ios/WeatherApp/Info.plist
<key>NSLocationWhenInUseUsageDescription</key>
<string>날씨 정보를 가져오기 위해서는 위치 정보 권한이 필요하다.</string>

./android/app/src/main/AndroidManifest.xml
<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />







npx react-native init SNSApp --template react-native-template-typescript

yarn add react-navigation react-native-reanimated react-native-gesture-handler react-native-screens react-native-safe-area-context
yarn add react-navigation-stack @react-native-community/masked-view react-navigation-tabs react-navigation-drawer

yarn add @react-native-community/async-storage

cd ios
pod install

To finalize installation of react-native-screens for Android, add the following two lines to dependencies section in android/app/build.gradle

implementation 'androidx.appcompat:appcompat:1.1.0-rc01'
implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0-alpha02'

To finalize installation of react-native-gesture-handler for Android, make the following modifications to MainActivity.java

package com.reactnavigation.example;

import com.facebook.react.ReactActivity;
+ import com.facebook.react.ReactActivityDelegate;
+ import com.facebook.react.ReactRootView;
+ import com.swmansion.gesturehandler.react.RNGestureHandlerEnabledRootView;

public class MainActivity extends ReactActivity {

  @Override
  protected String getMainComponentName() {
    return "Example";
  }

+  @Override
+  protected ReactActivityDelegate createReactActivityDelegate() {
+    return new ReactActivityDelegate(this, getMainComponentName()) {
+      @Override
+      protected ReactRootView createRootView() {
+        return new RNGestureHandlerEnabledRootView(MainActivity.this);
+      }
+    };
+  }
}

Then add the following at the top of your entry file, such as index.js or App.js

import 'react-native-gesture-handler';



https://dev-yakuza.github.io/ko/react-native/react-native-make/
https://github.com/bamlab/react-native-make

yarn add --dev @bam.tech/react-native-make

App 아이콘을 생성하려면 1024x1024 px 사이즈의 png 파일이 필요합니다.
# react-native set-icon --path [path-to-image]
react-native set-icon --path [path-to-image] --background ["color"]
# react-native set-icon --path ./src/Assets/Images/app_icon.png
react-native set-icon --path ./src/Assets/Images/app_icon.png --background "#FFFFFF"

Splash 이미지를 생성하기 위해서는 최소 3000x3000px 사이즈의 png 파일이 필요합니다.
# react-native set-splash --path [path-to-image]
# react-native set-splash --path [path-to-image] --resize [contain|cover|center]
react-native set-splash --path [path-to-image] --resize [contain|cover|center] --background ["background-color"]
# react-native set-splash --path ./src/Assets/Images/splash.png
# react-native set-splash --path ./src/Assets/Images/splash.png --resize cover
react-native set-splash --path ./src/Assets/Images/app_splash.png --resize center --background "#FFFFFF"

여기에서 resize 옵션가 있는데 기본값은 contain입니다. 또한 Cover 옵션를 사용할 때는 중요 이미지가 짤리지 않게 하기 위해, Splash 이미지를 만들 때, 중요 이미지를 백그라운드 이미지의 1/3 padding 지점에 위치하도록 합니다.
저는 주로 단색이 아닌 배경색이 있는 Splash 이미지를 사용합니다. 이 때는, cover 옵션을 사용하여 생성하면 원하는 Splash 이미지를 얻을 수 있었습니다.

이를 위해서 react-native-make는 react-native-splash-screen을 사용하도록 하고 있습니다.
react-native-make만을 위해서는 아니고 React Native에서 Splash 이미지를 컨트롤할 때는, react-native-splash-screen을 사용하면 정말 편하게 다룰 수 있습니다. 이에 관해, 작성한 블로그가 있습니다. 아래에 링크를 통해 확인해 보시기 바랍니다.
https://dev-yakuza.github.io/ko/react-native/react-native-splash-screen/

yarn add react-native-splash-screen
cd ios
pod install
